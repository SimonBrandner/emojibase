(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{68:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"metadata",(function(){return c})),r.d(t,"toc",(function(){return p})),r.d(t,"default",(function(){return l}));var n=r(3),o=r(7),a=(r(0),r(92)),i={title:"TypeScript support"},c={unversionedId:"typescript",id:"typescript",isDocsHomePage:!1,title:"TypeScript support",description:"Emojibase is written in TypeScript, so feel free to utilize our types! All types are available as",source:"@site/docs/typescript.md",slug:"/typescript",permalink:"/docs/typescript",editUrl:"https://github.com/milesj/emojibase/edit/master/website/docs/typescript.md",version:"current",sidebar:"docs",previous:{title:"Translations",permalink:"/docs/translations"},next:{title:"Specification alignment",permalink:"/docs/spec"}},p=[],s={toc:p};function l(e){var t=e.components,r=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(n.a)({},s,r,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Emojibase is written in TypeScript, so feel free to utilize our types! All types are available as\nnamed imports from the index of ",Object(a.b)("inlineCode",{parentName:"p"},"emojibase"),"!\n",Object(a.b)("a",{parentName:"p",href:"https://github.com/milesj/emojibase/blob/master/packages/core/src/types.ts"},"View the available types"),"."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-ts"},"import { Emoji, Emoticon, Shortcode } from 'emojibase';\n")),Object(a.b)("p",null,"The 2 most important types are ",Object(a.b)("inlineCode",{parentName:"p"},"Emoji")," and ",Object(a.b)("inlineCode",{parentName:"p"},"CompactEmoji"),", which represent the ",Object(a.b)("inlineCode",{parentName:"p"},"data.json")," and\n",Object(a.b)("inlineCode",{parentName:"p"},"compact.json")," dataset structures."))}l.isMDXComponent=!0},92:function(e,t,r){"use strict";r.d(t,"a",(function(){return u})),r.d(t,"b",(function(){return f}));var n=r(0),o=r.n(n);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=o.a.createContext({}),l=function(e){var t=o.a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},u=function(e){var t=l(e.components);return o.a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},b=o.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,i=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),u=l(r),b=n,f=u["".concat(i,".").concat(b)]||u[b]||m[b]||a;return r?o.a.createElement(f,c(c({ref:t},s),{},{components:r})):o.a.createElement(f,c({ref:t},s))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,i=new Array(a);i[0]=b;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:n,i[1]=c;for(var s=2;s<a;s++)i[s]=r[s];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,r)}b.displayName="MDXCreateElement"}}]);