(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{55:function(e,t,i){"use strict";i.r(t),i.d(t,"frontMatter",(function(){return p})),i.d(t,"metadata",(function(){return r})),i.d(t,"rightToc",(function(){return s})),i.d(t,"default",(function(){return m}));var n=i(2),o=i(6),a=(i(0),i(78)),p={title:"TypeScript support"},r={unversionedId:"typescript",id:"typescript",isDocsHomePage:!1,title:"TypeScript support",description:"Emojibase is written in TypeScript, so feel free to utilize our types! All types are available as",source:"@site/docs/typescript.md",permalink:"/docs/typescript",editUrl:"https://github.com/milesj/emojibase/edit/master/website/docs/typescript.md",sidebar:"docs",previous:{title:"API",permalink:"/docs/api"},next:{title:"Specification alignment",permalink:"/docs/spec"}},s=[],c={rightToc:s};function m(e){var t=e.components,i=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(n.a)({},c,i,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Emojibase is written in TypeScript, so feel free to utilize our types! All types are available as\nnamed imports from the index of ",Object(a.b)("inlineCode",{parentName:"p"},"emojibase"),"!\n",Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"https://github.com/milesj/emojibase/blob/master/packages/core/src/types.ts"}),"View the available types"),"."),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{className:"language-ts"}),"import { Emoji, Emoticon, Shortcode } from 'emojibase';\n")),Object(a.b)("p",null,"The 2 most important types are ",Object(a.b)("inlineCode",{parentName:"p"},"Emoji")," and ",Object(a.b)("inlineCode",{parentName:"p"},"CompactEmoji"),", which represent the ",Object(a.b)("inlineCode",{parentName:"p"},"data.json")," and\n",Object(a.b)("inlineCode",{parentName:"p"},"compact.json")," dataset structures."))}m.isMDXComponent=!0}}]);